{"version":3,"sources":["helpers/index.js","components/Loading.js","components/MainInfo.js","components/Form.js","components/TimesItem.js","components/Pagination.js","components/Times.js","App.js","hooks/index.js","serviceWorker.js","index.js","assets/img/loading.svg"],"names":["getPage","totalItems","currPage","forecastPaginate","startPage","endPage","totalPages","startIndex","endIndex","Math","min","pages","Array","keys","map","i","idx","id","currentPage","Loading","className","alt","src","loadingIcon","MainInfo","isLoaded","curWeather","nowDate","name","temperature","main","temp","icon","weather","iconSrc","iconTitle","feels_like","pressure","humidity","title","Form","handleSubmitForm","inputRef","errText","action","onSubmit","ref","type","length","required","TimesItem","dt_txt","iconUrl","Pagination","pager","setPage","onClick","key","Times","item","undefined","activeItem","dt","App","useState","apiKey","setApiKey","forecastItems","setForecastItems","setCurWeather","setIsLoaded","setErrText","useEffect","Promise","all","fetch","then","currentRes","forecastRes","ok","localStorage","setItem","json","currentResult","forecastResult","list","statusText","removeItem","catch","err","console","log","useFetchData","items","itemsForPaginate","setItemsForPaginate","setPager","setActiveItem","useCallback","page","updatePager","find","usePaginate","React","createRef","now","Date","getDay","getDate","getMonth","getFullYear","getNowDate","storageKey","getItem","handleChangeInput","e","preventDefault","current","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.7730cdc8.chunk.js","sourcesContent":["export const getNowDate = () => {\r\n    const days = [\r\n        \"Воскресенье\",\r\n        \"Понедельник\",\r\n        \"Вторник\",\r\n        \"Среда\",\r\n        \"Четверг\",\r\n        \"Пятница\",\r\n        \"Суббота\",\r\n    ];\r\n    const mounts = [\r\n        \"декабря\",\r\n        \"января\",\r\n        \"февраля\",\r\n        \"марта\",\r\n        \"апреля\",\r\n        \"мая\",\r\n        \"июня\",\r\n        \"июля\",\r\n        \"августа\",\r\n        \"сентября\",\r\n        \"октября\",\r\n        \"ноября\",\r\n    ];\r\n    const now = new Date();\r\n    const dateString = `${days[now.getDay()]}, ${now.getDate()} ${\r\n        mounts[now.getMonth()]\r\n    }, ${now.getFullYear()}`;\r\n\r\n    return dateString;\r\n};\r\n\r\nexport const getPage = (totalItems, currPage, forecastPaginate) => {\r\n    currPage = currPage || 1;\r\n\r\n    const totalPages = totalItems;\r\n\r\n    let startPage;\r\n    let endPage;\r\n\r\n    if (totalPages <= 4) {\r\n        startPage = 1;\r\n        endPage = totalPages;\r\n    } else {\r\n        if (currPage <= 3) {\r\n            startPage = 1;\r\n            endPage = 5;\r\n        } else if (currPage + 2 >= totalPages) {\r\n            startPage = totalPages - 4;\r\n            endPage = totalPages;\r\n        } else {\r\n            startPage = currPage - 2;\r\n            endPage = currPage + 2;\r\n        }\r\n    }\r\n\r\n    const startIndex = currPage - 1;\r\n    const endIndex = Math.min(startIndex - 1, totalPages - 1);\r\n\r\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\r\n        (i) => startPage + i\r\n    );\r\n    pages.map((i, idx) => (pages[idx] = { ...forecastPaginate[i - 1], id: i }));\r\n\r\n    return {\r\n        currentPage: currPage,\r\n        totalPages: totalPages,\r\n        startPage: startPage,\r\n        endPage: endPage,\r\n        startIndex: startIndex,\r\n        endIndex: endIndex,\r\n        pages: pages,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport loadingIcon from \"../assets/img/loading.svg\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"loading\">\r\n            <img alt=\"loading\" src={loadingIcon} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction MainInfo({ isLoaded, curWeather, nowDate }) {\r\n    const name = curWeather.name;\r\n    const temperature = curWeather.main?.temp;\r\n    const icon = curWeather.weather && curWeather.weather[0]?.icon;\r\n    const iconSrc = `https://openweathermap.org/img/wn/${icon}@2x.png`;\r\n    const iconTitle = curWeather.weather && curWeather.weather[0].main;\r\n    const feels_like = curWeather.main?.feels_like;\r\n    const pressure = curWeather.main?.pressure;\r\n    const humidity = curWeather.main?.humidity;\r\n\r\n    return (\r\n        <section className=\"main-info\">\r\n            <div className=\"container\">\r\n                <div className=\"main-info__city\">{name}</div>\r\n                <div className=\"main-info__date\">{nowDate}</div>\r\n                <div className=\"main-info__degrees\">\r\n                    <div className=\"main-info__icon\">\r\n                        <img src={iconSrc} alt={iconTitle} title={iconTitle} />\r\n                    </div>\r\n                    <div className=\"main-info__val\">{temperature} °F</div>\r\n                </div>\r\n                <div className=\"main-info__table\">\r\n                    <div className=\"main-info-table__item\">\r\n                        <div className=\"main-info-table__name\">\r\n                            Чувствуется как\r\n                        </div>\r\n                        <div className=\"main-info-table__val\">\r\n                            {feels_like} °F\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main-info-table__item\">\r\n                        <div className=\"main-info-table__name\">Давление</div>\r\n                        <div className=\"main-info-table__val\">\r\n                            {pressure} hPa\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main-info-table__item\">\r\n                        <div className=\"main-info-table__name\">Влажность</div>\r\n                        <div className=\"main-info-table__val\">{humidity}%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {!isLoaded && <Loading />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default MainInfo;\r\n","import React from \"react\";\r\n\r\nfunction Form({handleSubmitForm, inputRef, errText}) {\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form action=\"#\" onSubmit={handleSubmitForm}>\r\n                <div className=\"form__title\">Введите API ключ</div>\r\n                <div className=\"form__alert show\">{errText}</div>\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    className={errText.length ? \"invalid\" : \"\"}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Отправить</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction TimesItem({\r\n    dt_txt,\r\n    icon,\r\n    main,\r\n    temp,\r\n    feels_like,\r\n    pressure,\r\n    humidity,\r\n}) {\r\n    const iconUrl = `https://openweathermap.org/img/wn/${icon}@2x.png`;\r\n\r\n    return (\r\n        <div className=\"times__item\">\r\n            <div className=\"times-item__title\">{dt_txt}</div>\r\n            <div className=\"times__degrees\">\r\n                <div className=\"times__icon\">\r\n                    <img src={iconUrl} alt={main} title={main} />\r\n                </div>\r\n                <div className=\"times__val\">{temp} °F</div>\r\n            </div>\r\n            <div className=\"times-item__table\">\r\n                <div className=\"times-item-table__item\">\r\n                    <div className=\"times-item-table__name\">\r\n                        Чувствуется как\r\n                    </div>\r\n                    <div className=\"times-item-table__val\">{feels_like} °F</div>\r\n                </div>\r\n                <div className=\"times-item-table__item\">\r\n                    <div className=\"times-item-table__name\">Давление</div>\r\n                    <div className=\"times-item-table__val\">{pressure} hPa</div>\r\n                </div>\r\n                <div className=\"times-item-table__item\">\r\n                    <div className=\"times-item-table__name\">Влажность</div>\r\n                    <div className=\"times-item-table__val\">{humidity}%</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimesItem;\r\n","import React from \"react\";\r\n\r\nfunction Pagination({ pager, setPage }) {\r\n    return (\r\n        <div className=\"times-pagination\">\r\n            <button\r\n                className={pager?.currentPage === 1 ? \"disabled\" : \"\"}\r\n                onClick={() => setPage(pager.currentPage - 1)}\r\n            >\r\n                Prev\r\n            </button>\r\n            {pager?.pages.map((i, idx) => (\r\n                <button\r\n                    key={idx}\r\n                    title={i.dt_txt}\r\n                    className={pager?.currentPage === i.id ? \"active\" : \"\"}\r\n                    onClick={() => setPage(i.id)}\r\n                >\r\n                    {i?.id}\r\n                </button>\r\n            ))}\r\n            <button\r\n                className={\r\n                    pager?.currentPage === pager?.totalPages ? \"disabled\" : \"\"\r\n                }\r\n                onClick={() => setPage(pager.currentPage + 1)}\r\n            >\r\n                Next\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport TimesItem from \"./TimesItem\";\r\nimport Pagination from \"./Pagination\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction Times({ forecastPaginate, item, pager, setPage }) {\r\n    return (\r\n        <section className=\"times\">\r\n            {item !== undefined ? (\r\n                <div className=\"container\">\r\n                    <div className=\"times__title\">По времени на 5 дней</div>\r\n                    <TimesItem\r\n                        activeItem={item}\r\n                        key={item?.dt}\r\n                        dt={item?.dt}\r\n                        dt_txt={item?.dt_txt}\r\n                        icon={item?.weather && item?.weather[0].icon}\r\n                        main={item?.weather && item?.weather[0].main}\r\n                        temp={item?.main?.temp}\r\n                        feels_like={item?.main?.feels_like}\r\n                        pressure={item?.main?.pressure}\r\n                        humidity={item?.main?.humidity}\r\n                    />\r\n                    <Pagination\r\n                        forecastPaginate={forecastPaginate}\r\n                        pager={pager}\r\n                        setPage={setPage}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Times;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./assets/css/main.css\";\r\nimport { useFetchData, usePaginate } from \"./hooks\";\r\nimport { getNowDate } from \"./helpers\";\r\nimport MainInfo from \"./components/MainInfo\";\r\nimport Form from \"./components/Form\";\r\nimport Times from \"./components/Times\";\r\n\r\nfunction App() {\r\n    const [\r\n        setApiKey,\r\n        apiKey,\r\n        curWeather,\r\n        forecastItems,\r\n        isLoaded,\r\n        errText,\r\n        setErrText,\r\n    ] = useFetchData(null);\r\n\r\n    const [setItemsForPaginate, setPage, pager, activeItem] = usePaginate();\r\n\r\n    const inputRef = React.createRef();\r\n    const nowDate = getNowDate();\r\n\r\n    useEffect(() => {\r\n        const storageKey = localStorage.getItem(\"key\");\r\n        if (storageKey !== null) {\r\n            setApiKey(storageKey);\r\n        }\r\n\r\n        if (isLoaded) {\r\n            setItemsForPaginate(forecastItems);\r\n        }\r\n    }, [setApiKey, forecastItems, isLoaded, setItemsForPaginate]);\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        setApiKey(inputRef.current.value);\r\n    };\r\n\r\n    const handleChangeInput = () => setErrText(\"\");\r\n\r\n    return (\r\n        <main className=\"App\">\r\n            <MainInfo\r\n                isLoaded={isLoaded}\r\n                curWeather={curWeather}\r\n                nowDate={nowDate}\r\n            />\r\n\r\n            <Times item={activeItem} pager={pager} setPage={setPage} />\r\n\r\n            {localStorage.getItem(\"key\") === null && (\r\n                <Form\r\n                    handleChangeInput={handleChangeInput}\r\n                    handleSubmitForm={handleSubmitForm}\r\n                    inputRef={inputRef}\r\n                    errText={errText}\r\n                    apiKey={apiKey}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { getPage } from \"../helpers\";\r\n\r\nconst currentUrl =\r\n    \"https://api.openweathermap.org/data/2.5/weather?q=Chelyabinsk&appid=\";\r\nconst forecastUrl =\r\n    \"https://api.openweathermap.org/data/2.5/forecast?q=Chelyabinsk&appid=\";\r\n\r\nexport const useFetchData = (key) => {\r\n    const [apiKey, setApiKey] = useState(key);\r\n    const [forecastItems, setForecastItems] = useState([]);\r\n    const [curWeather, setCurWeather] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [errText, setErrText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (apiKey !== null) {\r\n            Promise.all([\r\n                fetch(currentUrl + apiKey),\r\n                fetch(forecastUrl + apiKey),\r\n            ])\r\n                .then(([currentRes, forecastRes]) => {\r\n                    if (currentRes.ok && forecastRes.ok) {\r\n                        localStorage.setItem(\"key\", \"\" + apiKey);\r\n                        Promise.all([\r\n                            currentRes.json(),\r\n                            forecastRes.json(),\r\n                        ]).then(([currentResult, forecastResult]) => {\r\n                            setCurWeather(currentResult);\r\n                            setForecastItems(forecastResult.list);\r\n                            setIsLoaded(true);\r\n                        });\r\n                    } else {\r\n                        setErrText(\r\n                            `Проверьте API ключ. ${currentRes.statusText}`\r\n                        );\r\n                        localStorage.removeItem(\"key\");\r\n                        setApiKey(null);\r\n                        setIsLoaded(true);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [apiKey]);\r\n\r\n    return [\r\n        setApiKey,\r\n        apiKey,\r\n        curWeather,\r\n        forecastItems,\r\n        isLoaded,\r\n        errText,\r\n        setErrText,\r\n    ];\r\n};\r\n\r\nexport const usePaginate = (items) => {\r\n    const [itemsForPaginate, setItemsForPaginate] = useState(items);\r\n    const [pager, setPager] = useState();\r\n    const [activeItem, setActiveItem] = useState();\r\n\r\n    const initPage = 1;\r\n\r\n    const setPage = useCallback(\r\n        (page, items = itemsForPaginate) => {\r\n            if (page < 1 || page > pager?.totalPages) {\r\n                return;\r\n            }\r\n\r\n            let updatePager = getPage(items?.length, page, itemsForPaginate);\r\n            setPager(updatePager);\r\n            setActiveItem(updatePager.pages.find((i) => i.id === page));\r\n\r\n            return pager;\r\n        },\r\n        [itemsForPaginate]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setItemsForPaginate(\r\n            items?.map((i, idx) => {\r\n                return {\r\n                    id: idx,\r\n                    dt: i.dt,\r\n                };\r\n            })\r\n        );\r\n    }, [items]);\r\n\r\n    useEffect(() => {\r\n        if (itemsForPaginate !== undefined) {\r\n            setPage(initPage);\r\n        }\r\n    }, [itemsForPaginate, setPage]);\r\n\r\n    return [setItemsForPaginate, setPage, pager, activeItem];\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.d8b3f08b.svg\";"],"sourceRoot":""}